<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <cxf:configuration name="CXF_Configuration" enableMuleSoapHeaders="true" initializeStaticBusInstance="true" doc:name="CXF Configuration"/>
    <db:generic-config name="Postrgres_Configuration_A3" url="jdbc:postgresql://localhost:5433/is_assignment3?password=postgres&amp;user=postgres" driverClassName="org.postgresql.Driver" doc:name="Generic Database Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="localhost" port="8080" basePath="/projeto2-web/rest/api" doc:name="HTTP Request Configuration"/>
    <smtp:gmail-connector name="Gmail" contentType="text/html" validateConnections="true" doc:name="Gmail"/>
    <flow name="ManagementTerminalFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/management" doc:name="HTTP Index - SOAP Management"/>
        <cxf:jaxws-service configuration-ref="CXF_Configuration" serviceClass="is_assignment3.Management_Web" doc:name="CXF"/>
        <choice doc:name="Choice">
            <when expression="method.name.equals(&quot;addFollower&quot;)">
                <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;AddFollower called&quot;]" level="DEBUG" doc:name="Adding Follower"/>
                <set-variable variableName="email" value="#[payload[0]]" doc:name="Variable_email"/>
                <set-variable variableName="brand" value="#[payload[1]]" doc:name="Variable_brand"/>
                <set-variable variableName="priceMin" value="#[payload[2]]" doc:name="Variable_priceMin"/>
                <set-variable variableName="priceMax" value="#[payload[3]]" doc:name="Variable_priceMax"/>
                <set-variable variableName="token" value="#[payload[4]]" doc:name="Variable_token"/>
                <db:select config-ref="Postrgres_Configuration_A3" doc:name="Database">
                    <db:parameterized-query><![CDATA[SELECT * from followers WHERE (email=#[flowVars.email] and brand=#[flowVars.brand]);]]></db:parameterized-query>
                </db:select>
                <choice doc:name="Choice">
                    <when expression="#[payload.size() != 0]">
                        <set-payload value="#[&quot;Already following&quot;]" doc:name="Set Payload"/>
                    </when>
                    <otherwise>
                        <logger message="#[&quot;Not present in DB&quot;]" level="DEBUG" doc:name="Logger"/>
                        <db:insert config-ref="Postrgres_Configuration_A3" doc:name="Database">
                            <db:parameterized-query><![CDATA[INSERT INTO followers (email, brand, price_min, price_max, token) values (#[flowVars.email], #[flowVars.brand], #[flowVars.priceMin], #[flowVars.priceMax], #[flowVars.token]);]]></db:parameterized-query>
                        </db:insert>
                        <set-payload value="Hello, &lt;br&gt;You're receiving this email because you're trying to subscibe to Brand: #[flowVars.brand]. &lt;br&gt; To subscribe click &lt;a href=http://localhost:8081/management/subscribe?email=#[flowVars.email]&amp;brand=#[flowVars.brand]&amp;token=#[flowVars.token]&gt;here&lt;/a&gt;." doc:name="Set Payload"/>
                        <smtp:outbound-endpoint host="smtp.gmail.com" port="587" user="bolidespontopete%40gmail.com" password="bolidespontopete" connector-ref="Gmail" to="#[flowVars.email]" from="bolidespontopete%40gmail.com" subject="[BolidesPontoP&#234;t&#234;] Confirm Subscription" responseTimeout="10000" doc:name="SMTP GMAIL SUBSCRIBE"/>
                        <set-payload value="#[&quot;Added follower: &quot;]#[flowVars.email]#[&quot;. Waiting for email confirmation&quot;]" doc:name="Set Payload"/>
                    </otherwise>
                </choice>
            </when>
            <when expression="method.name.equals(&quot;listFollowers&quot;)">
                <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;ListFollowers called&quot;]" level="DEBUG" doc:name="Listing Followers"/>
                <db:select config-ref="Postrgres_Configuration_A3" doc:name="Database">
                    <db:parameterized-query><![CDATA[SELECT * FROM followers WHERE confirm=True;]]></db:parameterized-query>
                </db:select>
                <object-to-string-transformer doc:name="Object to String"/>
            </when>
            <when expression="method.name.equals(&quot;removeFollower&quot;)">
                <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;RemoveFollower called&quot;]" level="DEBUG" doc:name="Removing Follower"/>
                <set-variable variableName="email" value="#[payload[0]]" doc:name="Variable_email"/>
                <set-variable variableName="brand" value="#[payload[1]]" doc:name="Variable_brand"/>
                <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;Executing query: SELECT * from followers WHERE email=&quot;]#[flowVars.email]]" level="INFO" doc:name="Logger"/>
                <db:select config-ref="Postrgres_Configuration_A3" doc:name="Database">
                    <db:parameterized-query><![CDATA[SELECT token from followers WHERE (email=#[flowVars.email] and brand=#[flowVars.brand]);]]></db:parameterized-query>
                </db:select>
                <logger message="#[payload]" level="INFO" doc:name="Log query result"/>
                <choice doc:name="Choice">
                    <when expression="#[payload.size() != 0]">
                        <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;Sending email to: &quot;]#[flowVars.email]" level="INFO" doc:name="Logger"/>
                        <set-variable variableName="token" value="#[payload[0].token]" doc:name="Variable_token"/>
                        <set-payload value="Hello, &lt;br&gt;You're trying to unsubscibe from Brand: #[flowVars.brand]. &lt;br&gt; To unsubscribe click &lt;a href=http://localhost:8081/management/unsubscribe?email=#[flowVars.email]&amp;brand=#[flowVars.brand]&amp;token=#[flowVars.token]&gt;here&lt;/a&gt;." encoding="UTF-8" mimeType="text/html" doc:name="Set Payload"/>
                        <smtp:outbound-endpoint host="smtp.gmail.com" port="587" user="bolidespontopete%40gmail.com" password="bolidespontopete" connector-ref="Gmail" to="#[flowVars.email]" from="bolidespontopete%40gmail.com" subject="[BolidesPontoP&#234;t&#234;] Confirm Unsubscription" responseTimeout="10000" doc:name="SMTP GMAIL UNSUBSCRIBE"/>
                        <logger message="Email sent" level="INFO" doc:name="Email Sent"/>
                        <set-payload value="Email sent to: #[flowVars.email]" doc:name="Set Payload"/>
                    </when>
                    <otherwise>
                        <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;No follower found with this emai. Payload: &quot; #[payload.toString()]]" level="INFO" doc:name="Logger"/>
                        <set-payload value="#[&quot;No follower was found with this email&quot;]" doc:name="Set Payload"/>
                    </otherwise>
                </choice>
            </when>
            <when expression="method.name.equals(&quot;listUsersProject2&quot;)">
                <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;List Users P2 Called&quot;]" level="INFO" doc:name="List Users P2"/>
                <http:request config-ref="HTTP_Request_Configuration" path="/customers" method="GET" doc:name="HTTP GET CUSTOMERS"/>
                <object-to-string-transformer doc:name="Object to String"/>
                <logger message="#[payload]" level="INFO" doc:name="Logger"/>
            </when>
            <when expression="method.name.equals(&quot;listCarsProject2&quot;)">
                <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;List Users P2 Called&quot;]" level="INFO" doc:name="List Cars P2"/>
                <http:request config-ref="HTTP_Request_Configuration" path="q/cars" method="GET" doc:name="HTTP GET CARS"/>
                <object-to-string-transformer doc:name="Object to String"/>
            </when>
            <otherwise>
                <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;Not a valid function&quot;]#[exception] #[payload[0]]" level="ERROR" doc:name="Logger"/>
                <set-payload value="#[&quot;Wrong option&quot;]" doc:name="Set Payload"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger message="Caught Exception" level="INFO" doc:name="Logger"/>
            <logger message="Excpetion Caught at: #[payload]" level="INFO" doc:name="Logger"/>
            <set-payload value="Exception Caught. Please try again." doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="UnsubscribeConfirmationFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/management/unsubscribe" allowedMethods="GET" doc:name="HTTP CheckUnsubscribe"/>
        <logger message="Receiving Unsubscribe Call" level="INFO" doc:name="Unsubscribe Received"/>
        <db:delete config-ref="Postrgres_Configuration_A3" doc:name="Database">
            <db:parameterized-query><![CDATA[DELETE FROM followers WHERE (email=#[message.inboundProperties.'http.query.params'.email] and brand=#[message.inboundProperties.'http.query.params'.brand] and token=#[message.inboundProperties.'http.query.params'.token]);]]></db:parameterized-query>
        </db:delete>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[payload==1]">
                <set-payload value="Unsubscribe Successfully" doc:name="Set Payload"/>
                <echo-component doc:name="Echo"/>
            </when>
            <otherwise>
                <set-payload value="Failed to Unsubscribe. " doc:name="Set Payload"/>
                <echo-component doc:name="Echo"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="SubscribeConfirmationFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/management/subscribe" allowedMethods="GET" doc:name="HTTP CheckSubscribe"/>
        <logger message="Receiving Subscribe Call" level="INFO" doc:name="Subscribe Received"/>
        <db:update config-ref="Postrgres_Configuration_A3" doc:name="Database">
            <db:parameterized-query><![CDATA[UPDATE followers SET confirm=True WHERE (email=#[message.inboundProperties.'http.query.params'.email] and brand=#[message.inboundProperties.'http.query.params'.brand] and token=#[message.inboundProperties.'http.query.params'.token]);]]></db:parameterized-query>
        </db:update>
        <logger message="#[payload]" level="INFO" doc:name="Log Query Result"/>
        <choice doc:name="Choice">
            <when expression="#[payload==1]">
                <set-payload value="Subscribed Successfully" doc:name="Set Payload"/>
                <echo-component doc:name="Echo"/>
            </when>
            <otherwise>
                <set-payload value="Failed to Subscribe" doc:name="Set Payload"/>
                <echo-component doc:name="Echo"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="ManagementWebFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/" doc:name="HTTP INDEX"/>
        <http:static-resource-handler resourceBase="/Users/tomas/Documents/Engenharia Informa&#769;tica/MEI/IS/IS_Assignment3/SystemsIntegration_Assignment3/is_assignment3/src/Web" defaultFile="index.html" doc:name="HTTP Static Index"/>
    </flow>
    <flow name="AddSubscriptionWeb">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/addSubscriber" allowedMethods="POST" doc:name="HTTP"/>
        <logger message="Adding Subscription Post received through Web. #[payload]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="email" value="#[payload.email]" doc:name="Variable_email"/>
        <set-variable variableName="brand" value="#[payload.brand]" doc:name="Variable_brand"/>
        <set-variable variableName="priceMin" value="#[payload.price_min]" doc:name="Variable_priceMin"/>
        <set-variable variableName="priceMax" value="#[payload.price_max]" doc:name="Variable_priceMax"/>
        <set-variable variableName="token" value="#[payload.token]" doc:name="Variable_token"/>
        <db:select config-ref="Postrgres_Configuration_A3" doc:name="Copy_of_Database">
            <db:parameterized-query><![CDATA[SELECT * from followers WHERE (email=#[flowVars.email] and brand=#[flowVars.brand]);]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Copy_of_Choice">
            <when expression="#[payload.size() != 0]">
                <set-payload value="#[&quot;Already following&quot;]" doc:name="Copy_of_Set Payload"/>
            </when>
            <otherwise>
                <logger message="#[&quot;Not present in DB&quot;]" level="DEBUG" doc:name="Copy_of_Logger"/>
                <db:insert config-ref="Postrgres_Configuration_A3" doc:name="Copy_of_Database">
                    <db:parameterized-query><![CDATA[INSERT INTO followers (email, brand, price_min, price_max, token) values (#[flowVars.email], #[flowVars.brand], #[flowVars.priceMin], #[flowVars.priceMax], #[flowVars.token]);]]></db:parameterized-query>
                </db:insert>
                <set-payload value="Hello, &lt;br&gt;You're receiving this email because you're trying to subscibe to Brand: #[flowVars.brand]. &lt;br&gt; To subscribe click &lt;a href=http://localhost:8081/management/subscribe?email=#[flowVars.email]&amp;brand=#[flowVars.brand]&amp;token=#[flowVars.token]&gt;here&lt;/a&gt;." doc:name="Copy_of_Set Payload"/>
                <smtp:outbound-endpoint host="smtp.gmail.com" port="587" user="bolidespontopete%40gmail.com" password="bolidespontopete" connector-ref="Gmail" to="#[flowVars.email]" from="bolidespontopete%40gmail.com" subject="[BolidesPontoP&#234;t&#234;] Confirm Subscription" responseTimeout="10000" doc:name="Copy_of_SMTP GMAIL SUBSCRIBE"/>
                <set-payload value="#[&quot;Added follower: &quot;]#[flowVars.email]#[&quot;. Waiting for email confirmation&quot;]" doc:name="Copy_of_Set Payload"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="RemoveSubscriptionWeb">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/removeSubscriber" allowedMethods="POST" doc:name="Copy_of_HTTP"/>
        <logger message="Removing Subscription Post received through Web. #[payload]" level="INFO" doc:name="Copy_of_Logger"/>
        <set-variable variableName="email" value="#[payload.email]" doc:name="Copy_of_Variable_email"/>
        <set-variable variableName="brand" value="#[payload.brand]" doc:name="Copy_of_Variable_brand"/>
        <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;Executing query: SELECT * from followers WHERE email=&quot;]#[flowVars.email]]" level="INFO" doc:name="Copy_of_Logger"/>
        <db:select config-ref="Postrgres_Configuration_A3" doc:name="Copy_of_Database">
            <db:parameterized-query><![CDATA[SELECT token from followers WHERE (email=#[flowVars.email] and brand=#[flowVars.brand]);]]></db:parameterized-query>
        </db:select>
        <logger message="#[payload]" level="INFO" doc:name="Copy_of_Log query result"/>
        <choice doc:name="Copy_of_Choice">
            <when expression="#[payload.size() != 0]">
                <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;Sending email to: &quot;]#[flowVars.email]" level="INFO" doc:name="Copy_of_Logger"/>
                <set-variable variableName="token" value="#[payload[0].token]" doc:name="Copy_of_Variable_token"/>
                <set-payload value="Hello, &lt;br&gt;You're trying to unsubscibe from Brand: #[flowVars.brand]. &lt;br&gt; To unsubscribe click &lt;a href=http://localhost:8081/management/unsubscribe?email=#[flowVars.email]&amp;brand=#[flowVars.brand]&amp;token=#[flowVars.token]&gt;here&lt;/a&gt;." encoding="UTF-8" mimeType="text/html" doc:name="Copy_of_Set Payload"/>
                <smtp:outbound-endpoint host="smtp.gmail.com" port="587" user="bolidespontopete%40gmail.com" password="bolidespontopete" connector-ref="Gmail" to="#[flowVars.email]" from="bolidespontopete%40gmail.com" subject="[BolidesPontoP&#234;t&#234;] Confirm Unsubscription" responseTimeout="10000" doc:name="Copy_of_SMTP GMAIL UNSUBSCRIBE"/>
                <logger message="Email sent" level="INFO" doc:name="Copy_of_Email Sent"/>
                <set-payload value="Email sent to: #[flowVars.email]" doc:name="Copy_of_Set Payload"/>
            </when>
            <otherwise>
                <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;No follower found with this emai. Payload: &quot; #[payload.toString()]]" level="INFO" doc:name="Copy_of_Logger"/>
                <set-payload value="#[&quot;No follower was found with this email&quot;]" doc:name="Copy_of_Set Payload"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="ListSubscriversWeb">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/subscribers" allowedMethods="GET" doc:name="HTTP"/>
        <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;ListFollowers called&quot;]" level="DEBUG" doc:name="Copy_of_Listing Followers"/>
        <db:select config-ref="Postrgres_Configuration_A3" doc:name="Copy_of_Database">
            <db:parameterized-query><![CDATA[SELECT * FROM followers WHERE confirm=True;]]></db:parameterized-query>
        </db:select>
        <object-to-string-transformer doc:name="Copy_of_Object to String"/>
    </flow>
    <flow name="GetCustomersP2Web">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/customers" allowedMethods="GET" doc:name="HTTP"/>
        <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;List Users P2 Called&quot;]" level="INFO" doc:name="Copy_of_List Users P2"/>
        <http:request config-ref="HTTP_Request_Configuration" path="/customers" method="GET" doc:name="Copy_of_HTTP GET CUSTOMERS"/>
        <object-to-string-transformer doc:name="Copy_of_Object to String"/>
        <logger message="#[payload]" level="INFO" doc:name="Copy_of_Logger"/>
    </flow>
    <flow name="GetCarsP2Web">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/cars" allowedMethods="GET" doc:name="HTTP"/>
        <logger message="#[server.dateTime.format(&quot;dd-MMM-yy hh:mm:ss&quot;).toUpperCase()] #[&quot;List Users P2 Called&quot;]" level="INFO" doc:name="Copy_of_List Cars P2"/>
        <http:request config-ref="HTTP_Request_Configuration" path="/cars" method="GET" doc:name="Copy_of_HTTP GET CARS"/>
        <object-to-string-transformer doc:name="Copy_of_Object to String"/>
    </flow>
</mule>
